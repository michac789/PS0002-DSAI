print("sdfs")
x = 5
print(x)
y = 3
print(x+y)
print(x, y)
print(x, y, x)
library(nycflights13)
library (nycflights13)
;a
help
cmd
c,
cm
ls
library(nycflights13)
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
print(flights)
print(planes)
print(hour)
install.packages("dplyr")
'sfsfd'
install.packages("lubridate")
library(lubridate)
yml
ymd
install.packages("ggplot2")
install.packages("ggplot2")
"
Get the 'ymd' function by installing 'lubridate' package (year month date format)
Install 'ggplot' package to plot data on a graph
"
airportdailycounts <- flights %>%
filter(dest %in% c('ALB', 'BDL', 'BTV')) %>%
group_by(year, month, day, dest) %>%
summarise(numflights = n()) %>%
mutate(date = ymd(paste(year, month, day, sep = "-")))
print(airportdailycounts)
source("C:/Users/Michael/Downloads/Soln_Lab 1 task.R")
source("C:/Users/Michael/Downloads/Soln_Lab 1 task.R")
source("C:/Users/Michael/Downloads/Soln_Lab 1 task.R")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
# Week 2 - 3: Sorting, selecting, comparing using 'dplyr' package
"
Get the 'ymd' function by installing 'lubridate' package (year month date format)
Install 'ggplot' package to plot data on a graph
"
library(lubridate)
airportdailycounts <- flights %>%
filter(dest %in% c('ALB', 'BDL', 'BTV')) %>%
group_by(year, month, day, dest) %>%
summarise(numflights = n()) %>%
mutate(date = ymd(paste(year, month, day, sep = "-")))
print(airportdailycounts)
library(ggplot2)
ggplot(data = airportdailycounts, aes(x = date, y = numflights, colour = dest)) +
geom_point()
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
install.packages(ggplotgui)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(ggplot)
install.packages("ggplot2")
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
install.packages("ggplotgu")ss
source("C:/My Files/MY REPOSITORIES/PS0002/Week 02. Getting Started with R/w2_3.r")
hi <- list(5, 6)
hi
append(hi, 8)
hi[-1]
hi
hi
hi
hi[-1]
hi
append(hi, 8, 10)
append(hi, 4)
View(hi)
hi <- append(hi, 4)
getwd()
setwd("C:/Users/Michael/Documents")
ls
ls()
getwd()
setwd("C:/My Files/MY REPOSITORIES/PS0002/Week02")
source("C:/Users/Michael/Downloads/Soln_Lab 1 task.R")
varnames<-c("id","gender","height","weight","siblings")
lab1<-read.fwf("lab1fixed.txt",header=F,col.names=varnames,width=c(3,1,3,2,1))
plot(lab1$height,lab1$weight)
varnames<-c("id","gender","height","weight","siblings")
lab1<-read.fwf("lab1fixed.txt",header=F,col.names=varnames,width=c(3,1,3,2,1))
plot(lab1$height,lab1$weight)
lab1m<-lab1[lab1[,2]=="M",]
length(lab1m[,1])
lab1m<-lab1[lab1[,2]=="M",]
length(lab1m[,1])
lab1m<-lab1[lab1[,2]=="M",]
length(lab1m[,1])
source("C:/My Files/MY REPOSITORIES/PS0002/Week04/lab3.R")
sleep1 <- sleep1 %>%
mutate("rem_ratio", sleep_rem / sleep_total)
sleep1
source("C:/My Files/MY REPOSITORIES/PS0002/Week04/lab3.R")
sleep1
sleep1_vore <- sleep1 %>% group_by(vore)
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# Lab 3 (Assignment 1)
# Note: please install these required packages first (dplyr, ggplot2)
# Load the required packages
library(dplyr)
library(ggplot2)
# View descriptive summary
summary(msleep)
# 1. Create dataframe 'sleep1', include all variables except name, genus, conservation,
# for mammals with body weight falling into interval [0.1, 100]
sleep1 <- msleep %>%
select(-name, -genus, -conservation) %>%
filter(0.1 <= bodywt & bodywt <= 100)
# 2. Add two new variables in dataframe 'sleep1',
# 'rem_ratio': percentage of rem sleep to total sleep
# 'diff_sw': difference between time spent awake and total sleep time
sleep1 <- sleep1 %>%
mutate(rem_ratio = sleep_rem / sleep_total, diff_sw = awake - sleep_total)
# 3. Find the summary statistics for dataframe 'sleep1':
# â¢ number of mammals
# â¢ average of (rem_ratio, diff_sw, body weight over different vore groups)
# â¢ briefly comment the comparison between vore groups
sleep1_vore <- sleep1 %>% group_by(vore)
summary_stats1 <- sleep1 %>%
summarise(num_mammals = n(), avg_remratio = mean(rem_ratio, na.rm = T),
avg_diffsw = mean(diff_sw, na.rm = T))
summary_stats2 <- sleep1_vore %>%
summarise(ave_bodywt = mean(bodywt, na.rm = T))
summary_stats1
summary_stats2
# Comment:
# On average, insectivore and carnivore has the highest body weight, followed by
# omnivore that has moderate body weight, herbivore with lighter body weight, and
# the unclassified (NA) group has the least average body weight
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# â¢ briefly comment how different each variable distributes for different vore groups
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# Comment:
#
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# â¢ briefly comment the relationship from each plot
# TODO
clear
clearPushBack()
clear()
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# â¢ briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# View descriptive summary
summary(msleep)
source("C:/My Files/MY REPOSITORIES/PS0002/Week04/lab3.R")
source("C:/My Files/MY REPOSITORIES/PS0002/Week04/lab3.R")
# Load the required packages
library(dplyr)
library(ggplot2)
# View descriptive summary
summary(msleep)
# 1. Create dataframe 'sleep1', include all variables except name, genus, conservation,
# for mammals with body weight falling into interval [0.1, 100]
sleep1 <- msleep %>%
select(-name, -genus, -conservation) %>%
filter(0.1 <= bodywt & bodywt <= 100)
sleep1
# 2. Add two new variables in dataframe 'sleep1',
# 'rem_ratio': percentage of rem sleep to total sleep
# 'diff_sw': difference between time spent awake and total sleep time
sleep1 <- sleep1 %>%
mutate(rem_ratio = (sleep_rem / sleep_total) * 100, diff_sw = awake - sleep_total)
sleep1
sleep1
# 3. Find the summary statistics for dataframe 'sleep1':
# â¢ number of mammals
# â¢ average of (rem_ratio, diff_sw, body weight over different vore groups)
# â¢ briefly comment the comparison between vore groups
summary_stats1 <- sleep1 %>%
summarise(num_mammals = n(), avg_remratio = mean(rem_ratio, na.rm = T),
avg_diffsw = mean(diff_sw, na.rm = T))
sleep1_vore <- sleep1 %>% group_by(vore)
summary_stats2 <- sleep1_vore %>%
summarise(ave_bodywt = mean(bodywt, na.rm = T))
summary_stats1
summary_stats2
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# â¢ briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# â¢ briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
sleep1_vore
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# â¢ briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# â¢ briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# â¢ briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# â¢ briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth(method = 'lm')
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# â¢ briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# â¢ briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth()
ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth()
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# â¢ briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth()
ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth(method = 'lm')
# Lab 3 (Assignment 1)
# Note: please install these required packages first (dplyr, ggplot2)
# Load the required packages
library(dplyr)
library(ggplot2)
# View descriptive summary
summary(msleep)
# 1. Create dataframe 'sleep1', include all variables except name, genus, conservation,
# for mammals with body weight falling into interval [0.1, 100]
sleep1 <- msleep %>%
select(-name, -genus, -conservation) %>%
filter(0.1 <= bodywt & bodywt <= 100)
# 2. Add two new variables in dataframe 'sleep1',
# 'rem_ratio': percentage of rem sleep to total sleep
# 'diff_sw': difference between time spent awake and total sleep time
sleep1 <- sleep1 %>%
mutate(rem_ratio = (sleep_rem / sleep_total) * 100, diff_sw = awake - sleep_total)
# 3. Find the summary statistics for dataframe 'sleep1':
# • number of mammals
# • average of (rem_ratio, diff_sw, body weight over different vore groups)
# • briefly comment the comparison between vore groups
summary_stats1 <- sleep1 %>%
summarise(num_mammals = n(), avg_remratio = mean(rem_ratio, na.rm = T),
avg_diffsw = mean(diff_sw, na.rm = T))
sleep1_vore <- sleep1 %>% group_by(vore)
summary_stats2 <- sleep1_vore %>%
summarise(ave_bodywt = mean(bodywt, na.rm = T))
summary_stats1
summary_stats2
# Comment:
# On average, insectivore and carnivore has the highest body weight, followed by
# omnivore that has moderate body weight, herbivore with lighter body weight, and
# the unclassified (NA) group has the least average body weight.
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# • briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# Comment:
# The rem_ratio is quite distributed apart across different vore groups,
# herbivore generally has lower rem ratio, carnivore has generally higher rem ratio,
# insectivore has a packed and a very high rem ratio amongst the other vore type,
# omnivore has a moderate rem ratio and has the most widely distributed ratio
# Meanwhile, the difference between time awake and sleep time (diff_sw) is more closely
# distributed between the various vore groups. Almost all carnivore has a positive diff_sw,
# which means that they are more likely to be awake then asleep, while herbivore has a more
# spreadout distribution both negative & positive difference, insectivore generally sleeps more
# than they are awake, most omnivores sleep less than awake there are a very few outliers
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# • briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth()
ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth()
# Comment:
# The relationship of the first plot is preety vague and random, though generally there is a slight
# increase of rem_ratio when body weight increases (when using a linear line), but when we do not use
# a linear line it seems that there is no specific or strong correlation between body weight and
# the rem ratio.
# The second plot has a slight positive correlation between the increase of body weight and the
# difference between awake and sleep hours. Most mammals represented from the data with small weight
# has a preety random and spreadout sleep time difference, while heavier animals tend to have a positive
# diff_sw value, though with an outlier present.
# Lab 3 (Assignment 1)
# Note: please install these required packages first (dplyr, ggplot2)
# Load the required packages
library(dplyr)
library(ggplot2)
# View descriptive summary
summary(msleep)
# 1. Create dataframe 'sleep1', include all variables except name, genus, conservation,
# for mammals with body weight falling into interval [0.1, 100]
sleep1 <- msleep %>%
select(-name, -genus, -conservation) %>%
filter(0.1 <= bodywt & bodywt <= 100)
# 2. Add two new variables in dataframe 'sleep1',
# 'rem_ratio': percentage of rem sleep to total sleep
# 'diff_sw': difference between time spent awake and total sleep time
sleep1 <- sleep1 %>%
mutate(rem_ratio = (sleep_rem / sleep_total) * 100, diff_sw = awake - sleep_total)
# 3. Find the summary statistics for dataframe 'sleep1':
# • number of mammals
# • average of (rem_ratio, diff_sw, body weight over different vore groups)
# • briefly comment the comparison between vore groups
summary_stats1 <- sleep1 %>%
summarise(num_mammals = n(), avg_remratio = mean(rem_ratio, na.rm = T),
avg_diffsw = mean(diff_sw, na.rm = T))
sleep1_vore <- sleep1 %>% group_by(vore)
summary_stats2 <- sleep1_vore %>%
summarise(ave_bodywt = mean(bodywt, na.rm = T))
summary_stats1
summary_stats2
# Comment:
# On average, insectivore and carnivore has the highest body weight, followed by
# omnivore that has moderate body weight, herbivore with lighter body weight, and
# the unclassified (NA) group has the least average body weight.
# 4. Use an appropriate plot to represent the distribution of:
# rem_ratio over different vore groups, repeat for diff_sw
# • briefly comment how different each variable distributes for different vore groups
sleep1_vore <- sleep1_vore %>% filter(!is.na(rem_ratio), !is.na(diff_sw))
ggplot(sleep1_vore, aes(x = vore, y = rem_ratio)) + geom_boxplot()
ggplot(sleep1_vore, aes(x = vore, y = diff_sw)) + geom_boxplot()
# Comment:
# The rem_ratio is quite distributed apart across different vore groups,
# herbivore generally has lower rem ratio, carnivore has generally higher rem ratio,
# insectivore has a packed and a very high rem ratio amongst the other vore type,
# omnivore has a moderate rem ratio and has the most widely distributed ratio
# Meanwhile, the difference between time awake and sleep time (diff_sw) is more closely
# distributed between the various vore groups. Almost all carnivore has a positive diff_sw,
# which means that they are more likely to be awake then asleep, while herbivore has a more
# spreadout distribution both negative & positive difference, insectivore generally sleeps more
# than they are awake, most omnivores sleep less than awake there are a very few outliers
# 5. Use two appropriate plots to visualize relationship between:
# rem ratio and body weight, diff_sw and body weight
# • briefly comment the relationship from each plot
sleep1noNA <- sleep1 %>% filter(!is.na(rem_ratio), !is.na(diff_sw), !is.na(bodywt))
ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = rem_ratio)) + geom_point() + geom_smooth()
ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth(method = 'lm')
# ggplot(sleep1noNA, aes(x = bodywt, y = diff_sw)) + geom_point() + geom_smooth()
# Comment:
# The relationship of the first plot is preety vague and random, though generally there is a slight
# increase of rem_ratio when body weight increases (when using a linear line), but when we do not use
# a linear line it seems that there is no specific or strong correlation between body weight and
# the rem ratio.
# The second plot has a slight positive correlation between the increase of body weight and the
# difference between awake and sleep hours. Most mammals represented from the data with small weight
# has a preety random and spreadout sleep time difference, while heavier animals tend to have a positive
# diff_sw value, though with an outlier present.
